//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18444
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyAirport.Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VolDefinition", Namespace="http://schemas.datacontract.org/2004/07/MyAirport.Entities")]
    [System.SerializableAttribute()]
    public partial class VolDefinition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] BanquesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CIEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LigneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Banques {
            get {
                return this.BanquesField;
            }
            set {
                if ((object.ReferenceEquals(this.BanquesField, value) != true)) {
                    this.BanquesField = value;
                    this.RaisePropertyChanged("Banques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CIE {
            get {
                return this.CIEField;
            }
            set {
                if ((object.ReferenceEquals(this.CIEField, value) != true)) {
                    this.CIEField = value;
                    this.RaisePropertyChanged("CIE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ligne {
            get {
                return this.LigneField;
            }
            set {
                if ((object.ReferenceEquals(this.LigneField, value) != true)) {
                    this.LigneField = value;
                    this.RaisePropertyChanged("Ligne");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BagageDefinition", Namespace="http://schemas.datacontract.org/2004/07/MyAirport.Entities")]
    [System.SerializableAttribute()]
    public partial class BagageDefinition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeIATAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdVolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeIATA {
            get {
                return this.CodeIATAField;
            }
            set {
                if ((this.CodeIATAField.Equals(value) != true)) {
                    this.CodeIATAField = value;
                    this.RaisePropertyChanged("CodeIATA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreation {
            get {
                return this.DateCreationField;
            }
            set {
                if ((this.DateCreationField.Equals(value) != true)) {
                    this.DateCreationField = value;
                    this.RaisePropertyChanged("DateCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdVol {
            get {
                return this.IdVolField;
            }
            set {
                if ((this.IdVolField.Equals(value) != true)) {
                    this.IdVolField = value;
                    this.RaisePropertyChanged("IdVol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherVolsDeLaCompagnie", ReplyAction="http://tempuri.org/IService1/RechercherVolsDeLaCompagnieResponse")]
        MyAirport.Client.ServiceReference1.VolDefinition[] RechercherVolsDeLaCompagnie(string compagnie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherVolsDeLaCompagnie", ReplyAction="http://tempuri.org/IService1/RechercherVolsDeLaCompagnieResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition[]> RechercherVolsDeLaCompagnieAsync(string compagnie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherVolsParDate", ReplyAction="http://tempuri.org/IService1/RechercherVolsParDateResponse")]
        MyAirport.Client.ServiceReference1.VolDefinition[] RechercherVolsParDate(System.DateTime debut, System.DateTime fin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherVolsParDate", ReplyAction="http://tempuri.org/IService1/RechercherVolsParDateResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition[]> RechercherVolsParDateAsync(System.DateTime debut, System.DateTime fin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherVolsDuJour", ReplyAction="http://tempuri.org/IService1/RechercherVolsDuJourResponse")]
        MyAirport.Client.ServiceReference1.VolDefinition[] RechercherVolsDuJour();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherVolsDuJour", ReplyAction="http://tempuri.org/IService1/RechercherVolsDuJourResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition[]> RechercherVolsDuJourAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DetailVol", ReplyAction="http://tempuri.org/IService1/DetailVolResponse")]
        MyAirport.Client.ServiceReference1.VolDefinition DetailVol(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DetailVol", ReplyAction="http://tempuri.org/IService1/DetailVolResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition> DetailVolAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesDuVol", ReplyAction="http://tempuri.org/IService1/RechercherBagagesDuVolResponse")]
        MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesDuVol(int idVol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesDuVol", ReplyAction="http://tempuri.org/IService1/RechercherBagagesDuVolResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesDuVolAsync(int idVol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesParDate", ReplyAction="http://tempuri.org/IService1/RechercherBagagesParDateResponse")]
        MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesParDate(System.DateTime debut, System.DateTime fin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesParDate", ReplyAction="http://tempuri.org/IService1/RechercherBagagesParDateResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesParDateAsync(System.DateTime debut, System.DateTime fin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesDuJour", ReplyAction="http://tempuri.org/IService1/RechercherBagagesDuJourResponse")]
        MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesDuJour();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesDuJour", ReplyAction="http://tempuri.org/IService1/RechercherBagagesDuJourResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesDuJourAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DetailBagage", ReplyAction="http://tempuri.org/IService1/DetailBagageResponse")]
        MyAirport.Client.ServiceReference1.BagageDefinition DetailBagage(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DetailBagage", ReplyAction="http://tempuri.org/IService1/DetailBagageResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition> DetailBagageAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MyAirport.Client.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MyAirport.Client.ServiceReference1.IService1>, MyAirport.Client.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MyAirport.Client.ServiceReference1.VolDefinition[] RechercherVolsDeLaCompagnie(string compagnie) {
            return base.Channel.RechercherVolsDeLaCompagnie(compagnie);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition[]> RechercherVolsDeLaCompagnieAsync(string compagnie) {
            return base.Channel.RechercherVolsDeLaCompagnieAsync(compagnie);
        }
        
        public MyAirport.Client.ServiceReference1.VolDefinition[] RechercherVolsParDate(System.DateTime debut, System.DateTime fin) {
            return base.Channel.RechercherVolsParDate(debut, fin);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition[]> RechercherVolsParDateAsync(System.DateTime debut, System.DateTime fin) {
            return base.Channel.RechercherVolsParDateAsync(debut, fin);
        }
        
        public MyAirport.Client.ServiceReference1.VolDefinition[] RechercherVolsDuJour() {
            return base.Channel.RechercherVolsDuJour();
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition[]> RechercherVolsDuJourAsync() {
            return base.Channel.RechercherVolsDuJourAsync();
        }
        
        public MyAirport.Client.ServiceReference1.VolDefinition DetailVol(int id) {
            return base.Channel.DetailVol(id);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition> DetailVolAsync(int id) {
            return base.Channel.DetailVolAsync(id);
        }
        
        public MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesDuVol(int idVol) {
            return base.Channel.RechercherBagagesDuVol(idVol);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesDuVolAsync(int idVol) {
            return base.Channel.RechercherBagagesDuVolAsync(idVol);
        }
        
        public MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesParDate(System.DateTime debut, System.DateTime fin) {
            return base.Channel.RechercherBagagesParDate(debut, fin);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesParDateAsync(System.DateTime debut, System.DateTime fin) {
            return base.Channel.RechercherBagagesParDateAsync(debut, fin);
        }
        
        public MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesDuJour() {
            return base.Channel.RechercherBagagesDuJour();
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesDuJourAsync() {
            return base.Channel.RechercherBagagesDuJourAsync();
        }
        
        public MyAirport.Client.ServiceReference1.BagageDefinition DetailBagage(int id) {
            return base.Channel.DetailBagage(id);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition> DetailBagageAsync(int id) {
            return base.Channel.DetailBagageAsync(id);
        }
    }
}
